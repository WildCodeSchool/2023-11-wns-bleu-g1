name: "test-front"

on:
  pull_request:
    paths:
      - 'frontend/**'
  workflow_call:

jobs:

  linting-frontend:
    name: Linting frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies
        run: npm ci
      - name: Code Linting
        run: npm run lint

  prettier-frontend:
    name: Prettier frontend
    needs: [ linting-frontend ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies
        run: npm ci
      - name: Code Prettier
        run: npx prettier . --check

  frontend-integration-tests:
    name: integration tests
    needs: prettier-frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies
        run: npm ci
      - name: Run tests
        run: npm run test

  frontend-e2e-tests:
    name: e2e tests
    runs-on: ubuntu-latest
    needs: frontend-integration-tests
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies
        run: npm ci
      - name: Wait for Postgres
        run: until pg_isready -h localhost -p 5432; do sleep 1; done
      - name: Run database migrations
        run: npm run migrate
        env:
          DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
      - name: Cypress Github Action
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./frontend
          build: npm run build
          start: npm run start
        env:
          DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
