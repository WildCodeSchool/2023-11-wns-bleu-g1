name: "test-front"

on:
  pull_request:
    paths:
      - "frontend/**"
  workflow_call:

jobs:
  linting-frontend:
    name: Linting frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies
        run: npm ci
      - name: Code Linting
        run: npm run lint

  prettier-frontend:
    name: Prettier frontend
    needs: [linting-frontend]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies
        run: npm ci
      - name: Code Prettier
        run: npx prettier . --check

  frontend-integration-tests:
    name: integration tests
    needs: prettier-frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies
        run: npm ci
      - name: Run tests
        run: npm run test

  frontend-e2e-tests:
    name: e2e tests
    runs-on: ubuntu-latest
    needs: frontend-integration-tests
    steps:
      - uses: actions/checkout@v4
      - name: go to backend directory and make envfile
        run: |
          cd backend
          cp .env.example .env
      - name: go to frontend directory and make envfile
        run: |
          cd frontend
          cp .env.example .env
      - name: Build and start Docker Compose
        run: docker compose up --build -d
      - name: Install Cypress and run tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: frontend
